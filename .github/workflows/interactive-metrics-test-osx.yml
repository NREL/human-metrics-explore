name: exploratory-notebook-test-osx

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '5 4 * * 0'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    env: 
      EXP_CONDA_VER: 4.8.3
      PLATFORM: MacOSX-x86_64
    # We run only on macos here since the repo2docker tests will run on ubuntu
    runs-on: macos-latest
    strategy:
      matrix:
        target: [Interactive_Metrics.ipynb]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install miniconda + the conda environment
      shell: bash -l {0}
      run: |
        source setup/setup_conda.sh $EXP_CONDA_VER $PLATFORM
        ls -al $HOME | grep miniconda
        source setup/setup_notebook.sh
        source setup/activate.sh

    - name: Test the interactive timeline
      id: run-test
      shell: bash -l {0}
      run: |
        source setup/activate.sh
        conda env list
        python bin/run_notebooks.py ${{ matrix.target }}

    - name: Generate failure output file
      id: print-out-file-name
      if: failure()
      run: |
        OUT_FILENAME=`echo ${{ matrix.target }} | sed "s/.ipynb/_out.ipynb/"`
        echo "output filename = $OUT_FILENAME"
        echo "::set-output name=OUT_FILENAME::${OUT_FILENAME}"

    - name: Upload result for the interactive timeline
      uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: ${{ steps.print-out-file-name.outputs.OUT_FILENAME }}
        path: ./${{ steps.print-out-file-name.outputs.OUT_FILENAME }}

